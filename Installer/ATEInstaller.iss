; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{DE3A8FE7-5918-471A-BF59-84C2C3328CCF}
AppName=ContinuousTests
AppVersion=1.0.48
AppVerName=ContinuousTests 1.0.48
AppPublisher=ContinuousTests
DefaultDirName={pf}\ContinuousTests
DefaultGroupName=ContinuousTests
;LicenseFile=..\ReleaseBinaries\License.txt
OutputDir=..\ReleaseBinaries\Installer
OutputBaseFilename=ContinuousTests-v1.0.48
Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "..\ReleaseBinaries\AutoTest.VS.2008.Addin"; DestDir: "{app}"; Flags: ignoreversion;
Source: "..\ReleaseBinaries\AutoTest.VS.2010.Addin"; DestDir: "{app}"; Flags: ignoreversion;
Source: "..\ReleaseBinaries\AutoTest.VS.2012.Addin"; DestDir: "{app}"; Flags: ignoreversion;
Source: "..\ReleaseBinaries\AutoTest.VS.2013.Addin"; DestDir: "{app}"; Flags: ignoreversion;
Source: "..\ReleaseBinaries\AutoTest.Minimizer.dll"; DestDir: "{app}"; Flags: ignoreversion; 
Source: "..\ReleaseBinaries\AutoTest.VM.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.VM.Messages.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.Client.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.Graphs.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.VS.RiskClassifier.dll"; DestDir: "{app}"; Flags: ignoreversion;
Source: "..\ReleaseBinaries\AutoTest.VS.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\en-US\AutoTest.VS.resources.dll"; DestDir: "{app}\en-US"; Flags: ignoreversion
Source: "..\ReleaseBinaries\ContinuousTests.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\ContinuousTests.ExtensionModel.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.Profiler.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\extension.vsixmanifest"; DestDir: "{app}"; Flags: ignoreversion;
Source: "..\lib\Profiler\MMProfiler32.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\lib\Profiler\MMProfiler64.dll"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\ReleaseBinaries\AutoTest.Core.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.UI.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.Messages.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.TestRunner.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.TestRunner.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.TestRunner.v4.0.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.TestRunner.v4.0.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.TestRunner.x86.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.TestRunner.x86.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.TestRunner.x86.v4.0.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.TestRunner.x86.v4.0.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.TestRunners.Shared.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\AutoTest.VS.Util.dll"; DestDir: "{app}"; Flags: ignoreversion;
Source: "..\ReleaseBinaries\Icons\circleFAIL.png"; DestDir: "{app}\Icons"; Flags: ignoreversion
Source: "..\ReleaseBinaries\Icons\circleWAIL.png"; DestDir: "{app}\Icons"; Flags: ignoreversion
Source: "..\ReleaseBinaries\Icons\circleWIN.png"; DestDir: "{app}\Icons"; Flags: ignoreversion
Source: "..\ReleaseBinaries\progress.gif"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\ReleaseBinaries\Worst.Testing.Framework.Ever.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\Worst.Testing.Framework.Ever.License.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\NUnit.License.txt"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\ReleaseBinaries\TestRunners\NUnit\AutoTest.TestRunners.NUnit.dll"; DestDir: "{app}\TestRunners\NUnit"; Flags: ignoreversion
Source: "..\ReleaseBinaries\TestRunners\NUnit\nunit.core.dll"; DestDir: "{app}\TestRunners\NUnit"; Flags: ignoreversion
Source: "..\ReleaseBinaries\TestRunners\NUnit\nunit.core.interfaces.dll"; DestDir: "{app}\TestRunners\NUnit"; Flags: ignoreversion
Source: "..\ReleaseBinaries\TestRunners\NUnit\nunit.util.dll"; DestDir: "{app}\TestRunners\NUnit"; Flags: ignoreversion

Source: "..\ReleaseBinaries\TestRunners\XUnit\AutoTest.TestRunners.XUnit.dll"; DestDir: "{app}\TestRunners\XUnit"; Flags: ignoreversion
Source: "..\ReleaseBinaries\TestRunners\XUnit\xunit.runner.utility.dll"; DestDir: "{app}\TestRunners\XUnit"; Flags: ignoreversion

Source: "..\ReleaseBinaries\TestRunners\MSTest\AutoTest.TestRunners.MSTest.dll"; DestDir: "{app}\TestRunners\MSTest"; Flags: ignoreversion
Source: "..\ReleaseBinaries\TestRunners\MSTest\celer.Core.dll"; DestDir: "{app}\TestRunners\MSTest"; Flags: ignoreversion

Source: "..\ReleaseBinaries\TestRunners\MSpec\AutoTest.TestRunners.MSpec.dll"; DestDir: "{app}\TestRunners\MSpec"; Flags: ignoreversion

Source: "..\ReleaseBinaries\TestRunners\MbUnit\AutoTest.TestRunners.MbUnit.dll"; DestDir: "{app}\TestRunners\MbUnit"; Flags: ignoreversion
Source: "..\ReleaseBinaries\TestRunners\MbUnit\Gallio.dll"; DestDir: "{app}\TestRunners\MbUnit"; Flags: ignoreversion
Source: "..\ReleaseBinaries\TestRunners\MbUnit\Gallio.XmlSerializers.dll"; DestDir: "{app}\TestRunners\MbUnit"; Flags: ignoreversion
Source: "..\ReleaseBinaries\TestRunners\MbUnit\mbunit.config"; DestDir: "{app}\TestRunners\MbUnit"; Flags: ignoreversion

Source: "..\ReleaseBinaries\TestRunners\SimpleTesting\AutoTest.TestRunners.SimpleTesting.dll"; DestDir: "{app}\TestRunners\SimpleTesting"; Flags: ignoreversion
Source: "..\ReleaseBinaries\TestRunners\SimpleTesting\Simple.Testing.Framework.dll"; DestDir: "{app}\TestRunners\SimpleTesting"; Flags: ignoreversion
Source: "..\ReleaseBinaries\TestRunners\SimpleTesting\Simple.Testing.ClientFramework.dll"; DestDir: "{app}\TestRunners\SimpleTesting"; Flags: ignoreversion
Source: "..\ReleaseBinaries\TestRunners\SimpleTesting\PowerAssert.dll"; DestDir: "{app}\TestRunners\SimpleTesting"; Flags: ignoreversion

Source: "..\ReleaseBinaries\FSWatcher.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\Castle.Core.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\Castle.Facilities.Logging.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\Castle.license.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\Castle.Windsor.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\Mono.Cecil.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\lib\cecil deploy\Mono.Cecil.Rocks.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\Microsoft.msagl.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\Microsoft.msagl.drawing.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\Microsoft.msagl.GraphViewerGDI.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ReleaseBinaries\Northwoods.*"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\ReleaseBinaries\Rhino.*"; DestDir: "{app}"; Flags: ignoreversion

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{cm:UninstallProgram,ContinuousTests}"; Filename: "{uninstallexe}"

[Registry]
Root: HKLM; Subkey: "SOFTWARE\Microsoft\VisualStudio\12.0"; ValueType: string; ValueName: ""; ValueData: "AutomationOptions";
Root: HKLM; Subkey: "SOFTWARE\Microsoft\VisualStudio\12.0\AutomationOptions"; ValueType: string; ValueName: ""; ValueData: "LookInFolders";
Root: HKLM; Subkey: "SOFTWARE\Microsoft\VisualStudio\12.0\AutomationOptions\LookInFolders"; ValueType: string; ValueName: "{app}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKLM; Subkey: "SOFTWARE\Microsoft\VisualStudio\11.0"; ValueType: string; ValueName: ""; ValueData: "AutomationOptions";
Root: HKLM; Subkey: "SOFTWARE\Microsoft\VisualStudio\11.0\AutomationOptions"; ValueType: string; ValueName: ""; ValueData: "LookInFolders";
Root: HKLM; Subkey: "SOFTWARE\Microsoft\VisualStudio\11.0\AutomationOptions\LookInFolders"; ValueType: string; ValueName: "{app}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKLM; Subkey: "SOFTWARE\Microsoft\VisualStudio\10.0"; ValueType: string; ValueName: ""; ValueData: "AutomationOptions";
Root: HKLM; Subkey: "SOFTWARE\Microsoft\VisualStudio\10.0\AutomationOptions"; ValueType: string; ValueName: ""; ValueData: "LookInFolders";
Root: HKLM; Subkey: "SOFTWARE\Microsoft\VisualStudio\10.0\AutomationOptions\LookInFolders"; ValueType: string; ValueName: "{app}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKLM; Subkey: "SOFTWARE\Microsoft\VisualStudio\9.0"; ValueType: string; ValueName: ""; ValueData: "AutomationOptions";
Root: HKLM; Subkey: "SOFTWARE\Microsoft\VisualStudio\9.0\AutomationOptions"; ValueType: string; ValueName: ""; ValueData: "LookInFolders";
Root: HKLM; Subkey: "SOFTWARE\Microsoft\VisualStudio\9.0\AutomationOptions\LookInFolders"; ValueType: string; ValueName: "{app}"; ValueData: ""; Flags: uninsdeletevalue

Root: HKLM; Subkey: "SOFTWARE\Microsoft\VisualStudio\10.0\ExtensionManager\EnabledExtensions"; ValueType: string; ValueName: "RiskClassifier..e44e3e0c-91d0-406e-9716-8bd4f842c96f,1.0"; ValueData: "{code:GetExtensionFolder_ten}"; Flags: uninsdeletevalue
Root: HKU; Subkey: ".DEFAULT\SOFTWARE\Microsoft\VisualStudio\11.0\ExtensionManager\EnabledExtensions"; ValueType: string; ValueName: "RiskClassifier..e44e3e0c-91d0-406e-9716-8bd4f842c96f,1.0"; ValueData: "{code:GetExtensionFolder_eleven}"; Flags: uninsdeletevalue
Root: HKU; Subkey: ".DEFAULT\SOFTWARE\Microsoft\VisualStudio\12.0\ExtensionManager\EnabledExtensions"; ValueType: string; ValueName: "RiskClassifier..e44e3e0c-91d0-406e-9716-8bd4f842c96f,1.0"; ValueData: "{code:GetExtensionFolder_eleven}"; Flags: uninsdeletevalue

[Run]

;Filename:"{dotnet20}\RegAsm.exe"; Parameters: /codebase AutoTest.VS.dll;WorkingDir: {app}; StatusMsg: "Registering controls ..."; Flags: runhidden; AfterInstall: WriteExtensions();
Filename:"{dotnet40}\RegAsm.exe"; Parameters: /codebase AutoTest.VS.dll;WorkingDir: {app}; StatusMsg: "Registering controls ..."; Flags: runhidden; AfterInstall: WriteExtensions();
Filename:"regsvr32.exe"; Parameters: "/s MMProfiler32.dll";WorkingDir: {app}; StatusMsg: "Registeringcontrols x32 ..."; Flags: runhidden;
Filename:"regsvr32.exe"; Parameters: "/s MMProfiler64.dll";WorkingDir: {app}; StatusMsg: "Registeringcontrols x64 ..."; Flags: runhidden; Check: IsWin64;
Filename:"{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\9.0,InstallDir}devenv.exe"; Parameters: /ResetAddin ContinuousTests.VS.Connect /command File.Exit;WorkingDir: {app}; StatusMsg: "Resetting addin ..."; Flags: runasoriginaluser runhidden; Check: IfVS2008Installed();
Filename:"{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\10.0,InstallDir}devenv.exe"; Parameters: /ResetAddin ContinuousTests.VS.Connect /command File.Exit;WorkingDir: {app}; StatusMsg: "Resetting addin ..."; Flags: runasoriginaluser runhidden; Check: IfVS2010Installed();
Filename:"{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\11.0,InstallDir}devenv.exe"; Parameters: /ResetAddin ContinuousTests.VS.Connect /command File.Exit;WorkingDir: {app}; StatusMsg: "Resetting addin ..."; Flags: runasoriginaluser runhidden; Check: IfVS2012Installed();
Filename:"{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\11.0,InstallDir}devenv.exe"; Parameters: /setup;WorkingDir: {app}; StatusMsg: "Resetting addin ..."; Flags: runhidden; Check: IfVS2012Installed();
Filename:"{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\12.0,InstallDir}devenv.exe"; Parameters: /ResetAddin ContinuousTests.VS.Connect /command File.Exit;WorkingDir: {app}; StatusMsg: "Resetting addin ..."; Flags: runasoriginaluser runhidden; Check: IfVS2013Installed();
Filename:"{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\12.0,InstallDir}devenv.exe"; Parameters: /setup;WorkingDir: {app}; StatusMsg: "Resetting addin ..."; Flags: runhidden; Check: IfVS2013Installed();


;Filename:"{app}\VSMenuKiller.exe"; Parameters: VisualStudio.DTE.12.0 MenuBar ContinuousTests;WorkingDir: {app}; StatusMsg: "Installing 2013 addin ..."; Flags: runhidden;
;Filename:"{app}\VSMenuKiller.exe"; Parameters: VisualStudio.DTE.11.0 MenuBar ContinuousTests;WorkingDir: {app}; StatusMsg: "Installing 2012 addin ..."; Flags: runhidden;
;Filename:"{app}\VSMenuKiller.exe"; Parameters: VisualStudio.DTE.10.0 MenuBar ContinuousTests;WorkingDir: {app}; StatusMsg: "Installing 2010 addin ..."; Flags: runhidden;
;Filename:"{app}\VSMenuKiller.exe"; Parameters: VisualStudio.DTE.9.0 MenuBar ContinuousTests;WorkingDir: {app}; StatusMsg: "Installing 2008 addin ..."; Flags: runhidden;
;Filename:"{reg:HKLM\SOFTWARE\Microsoft\.NETFramework,InstallRoot}\{reg:HKCR\CLSID\{{61b3e12b-3586-3a58-a497-7ed7c4c794b9%7D\InprocServer32\2.0.0.0,RuntimeVersion}\InstallUtil.exe"; Parameters: AutoTest.VMHost.Service.exe;WorkingDir: {app}; StatusMsg: "Installing service ..."; Flags: runhidden;
;Filename:"net.exe"; Parameters: start MightyMoose;WorkingDir: {app}; StatusMsg: "Starting service ..."; Flags: runhidden;

[UninstallRun]
Filename:"{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\9.0,InstallDir}devenv.exe"; Parameters: /ResetAddin ContinuousTests.VS.Connect /command File.Exit;WorkingDir: {app}; StatusMsg: "Removing addin ..."; Flags: runhidden; Check: IfVS2008Installed();
Filename:"{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\10.0,InstallDir}devenv.exe"; Parameters: /ResetAddin ContinuousTests.VS.Connect /command File.Exit;WorkingDir: {app}; StatusMsg: "Removing addin ..."; Flags: runhidden; Check: IfVS2010Installed();
Filename:"{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\11.0,InstallDir}devenv.exe"; Parameters: /ResetAddin ContinuousTests.VS.Connect /command File.Exit;WorkingDir: {app}; StatusMsg: "Removing addin ..."; Flags: runhidden; Check: IfVS2012Installed();
Filename:"{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\12.0,InstallDir}devenv.exe"; Parameters: /ResetAddin ContinuousTests.VS.Connect /command File.Exit;WorkingDir: {app}; StatusMsg: "Removing addin ..."; Flags: runhidden; Check: IfVS2013Installed();
Filename:"sleep"; Parameters: 5;WorkingDir: {app}; StatusMsg: "Resetting addin ..."; Flags: runhidden;
;Filename:"{dotnet20}\RegAsm.exe"; Parameters: /unregister AutoTest.VS.dll;WorkingDir: {app}; StatusMsg: "Registering controls ..."; Flags: runhidden; AfterInstall: DeleteExtensions();
Filename:"{dotnet40}\RegAsm.exe"; Parameters: /unregister AutoTest.VS.dll;WorkingDir: {app}; StatusMsg: "Registering controls ..."; Flags: runhidden; AfterInstall: DeleteExtensions();
Filename:"regsvr32.exe"; Parameters: "/u /s MMProfiler32.dll";WorkingDir: {app}; StatusMsg: "Registeringcontrols x32 ..."; Flags: runhidden;
Filename:"regsvr32.exe"; Parameters: "/u /s MMProfiler64.dll";WorkingDir: {app}; StatusMsg: "Registeringcontrols x64 ..."; Flags: runhidden; Check: IsWin64;
Filename:"sleep"; Parameters: 2;WorkingDir: {app}; StatusMsg: "Resetting addin ..."; Flags: runhidden;
;Filename:"{app}\VSMenuKiller.exe"; Parameters: VisualStudio.DTE.12.0 MenuBar ContinuousTests;WorkingDir: {app}; StatusMsg: "Removing 2013 addin ..."; Flags: runhidden;
;Filename:"{app}\VSMenuKiller.exe"; Parameters: VisualStudio.DTE.11.0 MenuBar ContinuousTests;WorkingDir: {app}; StatusMsg: "Removing 2012 addin ..."; Flags: runhidden;
;Filename:"{app}\VSMenuKiller.exe"; Parameters: VisualStudio.DTE.10.0 MenuBar ContinuousTests;WorkingDir: {app}; StatusMsg: "Removing 2010 addin ..."; Flags: runhidden;
;Filename:"{app}\VSMenuKiller.exe"; Parameters: VisualStudio.DTE.9.0 MenuBar ContinuousTests;WorkingDir: {app}; StatusMsg: "Removing 2008 addin ..."; Flags: runhidden;

;Filename:"{dotnet20}\RegAsm.exe"; Parameters: /unregister AutoTest.VS.dll; WorkingDir: {app}; StatusMsg: "Unregistering Controls ..."; Flags: runhidden;
;Filename:"net.exe"; Parameters: stop MightyMoose;WorkingDir: {app}; StatusMsg: "Stoping service ..."; Flags: runhidden;
;Filename:"{reg:HKLM\SOFTWARE\Microsoft\.NETFramework,InstallRoot}\{reg:HKCR\CLSID\{{61b3e12b-3586-3a58-a497-7ed7c4c794b9%7D\InprocServer32\2.0.0.0,RuntimeVersion}\InstallUtil.exe"; Parameters: /u AutoTest.VMHost.Service.exe; WorkingDir: {app}; StatusMsg: "Uninstalling service ..."; Flags: runhidden;
;Filename:"{reg:HKLM\SOFTWARE\Microsoft\.NETFramework,InstallRoot}\{reg:HKCR\CLSID\{{61b3e12b-3586-3a58-a497-7ed7c4c794b9%7D\InprocServer32\2.0.0.0,RuntimeVersion}\RegAsm.exe"; Parameters: /unregister AutoTest.VS.dll; WorkingDir: {app}; StatusMsg: "Unregisteringcontrols ..."; Flags: runhidden; AfterInstall: DeleteExtension();


[Code]
Procedure StopService();
var
  iResult: Integer;
  sPath: String;
begin
  sPath := ExpandConstant('{app}');
  if FileExists(sPath + '\AutoTest.VS.dll') then
  begin
    Exec('net.exe', 'stop MightyMoose', '', SW_HIDE, ewWaitUntilTerminated, iResult)
  end
end;

procedure UnregisterAddInIfInstalled(sVersion: String; sAddinVersion: String);
var
   sXMLAddInFullFileName: String;
   sFolder: String;
   sIDEFullFileName: String;
   iResultCode: Integer;
begin
   sFolder := ExpandConstant('{app}');
   sXMLAddInFullFileName := sFolder + '\AutoTest.VS.' + sAddinVersion + '.Addin';

   if FileExists(sXMLAddInFullFileName) then
    begin
       DeleteFile(sXMLAddInFullFileName);
       sIDEFullFileName := ExpandConstant('{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\' + sVersion + ',InstallDir}') + 'devenv.exe'
       Exec(sIDEFullFileName, '/ResetAddin AutoTest.VS.Connect /command File.Exit', '', SW_HIDE, ewWaitUntilTerminated, iResultCode);
    end
end;

Function CreatePath(path: String) : String;
begin
    CreateDir(path);
    Result := path;
end;

Function GetExtensionFolder(sVersion: String) : String;
var
    sVSInstallDir: String;
    sCommonAppDataFolder: String;
begin
    sVSInstallDir := '{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\' + sVersion + '.0,InstallDir}';
    sCommonAppDataFolder := ExpandConstant(sVSInstallDir);
    sCommonAppDataFolder := CreatePath(sCommonAppDataFolder + 'Extensions');
    sCommonAppDataFolder := CreatePath(sCommonAppDataFolder + '\Continuous Tests');
    if sVersion = '10' then
    begin
      sCommonAppDataFolder := CreatePath(sCommonAppDataFolder + '\Mighty Moose');
      sCommonAppDataFolder := CreatePath(sCommonAppDataFolder + '\1.0');
    end;
    Result := sCommonAppDataFolder + '\';
end;

Function GetExtensionFolder_ten(bleh: String) : String;
begin
    Result := GetExtensionFolder('10');
end;

Function GetExtensionFolder_eleven(bleh: String) : String;
begin
    Result := GetExtensionFolder('11');
end;

Function GetExtensionsFile(sVersion: String) : String;
begin
    Result := GetExtensionFolder(sVersion) + 'extension.vsixmanifest';
end;

procedure WriteExtension(sVersion: String);
var
    sFileContent: String;
    sFile: String;
    sLocalFile: String;
    sApp: String;
begin
    sFile := GetExtensionsFile(sVersion);
    sLocalFile := ExpandConstant('{app}') + '\extension.vsixmanifest';
    sApp := ExpandConstant('{app}') + '\AutoTest.VS.RiskClassifier.dll';
    LoadStringFromFile(sLocalFile, sFileContent);
    StringChangeEx(sFileContent, '|%CurrentProject%|', sApp, True);
    SaveStringToFile(sFile, sFileContent, False);
end;

procedure DeleteExtension(sVersion: String);
var
    sFile: String;
begin
    sFile := GetExtensionsFile(sVersion);
    if FileExists(sFile) then
    begin
      DeleteFile(sFile);
    end;
end;

procedure WriteExtensions();
begin
    WriteExtension('10');
    WriteExtension('11');
end;

procedure DeleteExtensions();
begin
    DeleteExtension('10');
    DeleteExtension('11');
end;

Function IfVS2013Installed() : Boolean;
var
  sPath: String;
begin
  sPath := ExpandConstant('{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\12.0,InstallDir}');
  Result := FileExists(sPath + 'devenv.exe')
end;

Function IfVS2012Installed() : Boolean;
var
  sPath: String;
begin
  sPath := ExpandConstant('{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\11.0,InstallDir}');
  Result := FileExists(sPath + 'devenv.exe')
end;

Function IfVS2010Installed() : Boolean;
var
  sPath: String;
begin
  sPath := ExpandConstant('{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\10.0,InstallDir}');
  Result := FileExists(sPath + 'devenv.exe')
end;

Function IfVS2008Installed() : Boolean;
var
  sPath: String;
begin
  sPath := ExpandConstant('{reg:HKLM\SOFTWARE\Microsoft\VisualStudio\9.0,InstallDir}');
  Result := FileExists(sPath + 'devenv.exe')
end;
